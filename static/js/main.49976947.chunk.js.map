{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovies","title","a","fetch","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setMovie","setTitle","isCorrectTitle","setIsCorrectTitle","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","then","newMovie","trim","Response","description","imgUrl","imdbUrl","disabled","App","setMovies","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49976947.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=b8ded547';\n\nexport const getMovies = async (title: string) => {\n  const response = await fetch(`${API_URL}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovies } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie | null) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [isCorrectTitle, setIsCorrectTitle] = useState(true);\n\n  const findMovie = () => {\n    getMovies(title).then(newMovie => {\n      if (title.trim() === '' || newMovie.Response === 'False') {\n        setIsCorrectTitle(false);\n\n        return;\n      }\n\n      setMovie({\n        Title: newMovie.Title,\n        description: newMovie.Plot,\n        imgUrl: newMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}/`,\n        imdbID: newMovie.imdbID,\n      });\n    });\n  };\n\n  const changeTitleForSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsCorrectTitle(true);\n  };\n\n  const addMovieToList = () => {\n    addMovie(movie);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Search by title\"\n              className=\"input\"\n              value={title}\n              onChange={changeTitleForSearch}\n            />\n          </div>\n\n          {!isCorrectTitle && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovieToList}\n              disabled={!movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard\n              movie={movie}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const addMovie = (newMovie: Movie | null) => {\n    if (newMovie && !movies.find(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}